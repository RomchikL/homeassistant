telemetry:

#    recorder:
#      include:
#        entities- sensor.total_load

    homeassistant:

      customize:
        sensor.count_automation:
          friendly_name: Автоматизаций в системе -
        sensor.count_automation_on:
          friendly_name: Активных автоматизаций -
        sensor.count_automation_off:
          friendly_name: Отключенных автоматизаций -
        sensor.count_automation_unavailable:
          friendly_name: Недоступных автоматизаций -
        sensor.count_script:
          friendly_name: Скриптов в системе -
        sensor.count_script_on:
          friendly_name: Активных скриптов -
        sensor.count_script_off:
          friendly_name: Отключенных скриптов -
        sensor.count_script_unavailable:
          friendly_name: Недоступных скриптов -
#        sensor.count_update:
#           friendly_name: Аддонов в системе -
#        sensor.count_update_on:
#           friendly_name: Доступно обновлений -
        sensor.count_light:
          friendly_name: Светильников в системе -
        sensor.count_light_on:
          friendly_name: Активных светильников -
        sensor.count_light_off:
          friendly_name: Отключенных светильников -
        sensor.count_light_unavailable:
          friendly_name: Недоступных светильников - 
        sensor.count_switch:
          friendly_name: Реле в системе -
        sensor.count_switch_on:
          friendly_name: Активных реле -
        sensor.count_switch_off:
          friendly_name: Отключенных реле -
        sensor.count_switch_unavailable:
          friendly_name: Недоступных реле -
        sensor.count_climate:
          friendly_name: Термоголовок в системе -
        sensor.climate_switch_heat:
          friendly_name: Активных термоголовок -
        sensor.climate_switch_off:
          friendly_name: Отключенных термоголовок -
        sensor.count_climate_unavailable:
          friendly_name: Недоступных термоголовок -
        sensor.count_sensor:
          friendly_name: Сенсоров в системе -
        sensor.count_sensor_unavailable:
          friendly_name: Недоступных сенсоров -
        sensor.count_binary_sensor:
          friendly_name: Бинарных сенсоров в системе -
        sensor.count_binary_sensor_unavailable:
          friendly_name: Недоступных бинарных сенсоров -
        binary_sensor.notification_time:
          friendly_name: Уведомления
        binary_sensor.night_time:
          friendly_name: Ночной режим


    input_datetime:
      notification_start:
        name: Начало уведомлений
        has_date: false
        has_time: true

      notification_stop:
        name: Завершение уведомлений
        has_date: false
        has_time: true

      night_start:
        name: Старт ночного режима
        has_date: false
        has_time: true

      night_stop:
        name: Завершение ночного режима
        has_date: false
        has_time: true

          
    template:
    
      - binary_sensor:

######################
          - name: motion_detected
            state: "{{ is_state('group.motion_sensors', 'on') }}"

          - name: doors_state
            state: "{{ is_state('group.contact_sensors', 'on') }}"






#####################






################# Время уведомлений #################     
          - name: notification_time
            state: >
                {% if states('input_datetime.notification_start') < states('input_datetime.notification_stop') %}
                {{ states('input_datetime.notification_start') <= now().strftime('%H:%M:%S') <= states('input_datetime.notification_stop') }}
                {% elif states('input_datetime.notification_start') > states('input_datetime.notification_stop') %}
                {{states('input_datetime.notification_start') <= now().strftime('%H:%M:%S') <= '23:59:59'
                or '00:00:00' <= now().strftime('%H:%M:%S') <= states('input_datetime.notification_stop')}}
                {% endif %}                
            device_class: running
            
          - name: night_time
            state: >
                {% if states('input_datetime.night_start') < states('input_datetime.night_stop') %}
                {{ states('input_datetime.night_start') <= now().strftime('%H:%M:%S') <= states('input_datetime.night_stop') }}
                {% elif states('input_datetime.night_start') > states('input_datetime.night_stop') %}
                {{states('input_datetime.night_start') <= now().strftime('%H:%M:%S') <= '23:59:59'
                or '00:00:00' <= now().strftime('%H:%M:%S') <= states('input_datetime.night_stop')}}
                {% endif %}            
            device_class: running
     
      - sensor:

################# Автоматизации #################

          - name: count_automation
            state: >
                  {%- set domains = ['automation'] -%}
                  {%- for domain in domains -%}
                    {%- for item in states[domain] -%}
                      {% if loop.first %}
                        {{loop.length}}
                      {% endif %}
                    {%- endfor -%}
                  {%- endfor -%}
            icon: mdi:head
            
          - name: count_automation_on
            state: "{{states.automation | selectattr ('state', 'equalto', 'on') | list | length}}"
            icon: mdi:head-check

          - name: count_automation_off
            state: "{{states.automation | selectattr ('state', 'equalto', 'off') | list | length}}"
            icon: mdi:head-remove            

          - name: count_automation_unavailable
            state: "{{states.automation | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon: mdi:head-question
            
################# Скрипты #################

          - name: count_script
            state: >
                  {%- set domains = ['script'] -%}
                  {%- for domain in domains -%}
                    {%- for item in states[domain] -%}
                      {% if loop.first %}
                        {{loop.length}}
                      {% endif %}
                    {%- endfor -%}
                  {%- endfor -%}
            icon: mdi:file
            
          - name: count_script_on
            state: "{{states.script | selectattr ('state', 'equalto', 'on') | list | length}}"
            icon: mdi:file-check

          - name: count_script_off
            state: "{{states.script | selectattr ('state', 'equalto', 'off') | list | length}}"
            icon: mdi:file-remove            

          - name: count_script_unavailable
            state: "{{states.script | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon: mdi:file-question

################# Обновления #################

#          - name: count_update
#            state: >
#                  {%- set domains = ['update'] -%}
#                  {%- for domain in domains -%}
#                    {%- for item in states[domain] -%}
#                      {% if loop.first %}
#                        {{loop.length}}
#                      {% endif %}
#                    {%- endfor -%}
#                  {%- endfor -%}
#            icon: mdi:monitor-dashboard
            
#          - name: count_update_on
#            state: "{{states.update | selectattr ('state', 'equalto', 'on') | list | length}}"
#            icon: mdi:monitor-arrow-down-variant
            
################# Светильники #################

          - name: count_light
            state: >
                  {%- set domains = ['light'] -%}
                  {%- for domain in domains -%}
                    {%- for item in states[domain] -%}
                      {% if loop.first %}
                        {{loop.length}}
                      {% endif %}
                    {%- endfor -%}
                  {%- endfor -%}
            icon: mdi:lightbulb-group
            
          - name: count_light_on
            state: "{{states.light | selectattr ('state', 'equalto', 'on') | list | length}}"
            icon: mdi:lightbulb-on

          - name: count_lightswitch_on
            state: >
                  {{ ['switch.0x54ef441000b89402_left', 'switch.0x54ef441000b89402_right', 'light.lamp_1s', 'switch.0xa4c1388af6a76f04_l4', 'switch.0x54ef441000aad4d8_left', 'switch.0xa4c13849ef842ae5', 'switch.kn_backlight_lamps', 'switch.kn_backlight_lenta', 'switch.0xa4c138323f769290', 'switch.sonoff_10018da14e_1', 'switch.0x54ef441000aad4d8_right', 'switch.0xa4c1381662c81b0e', 'switch.0x54ef4410009f9505']
                  | select('is_state', 'on') | list | length }}
            icon: mdi:lightbulb-on

          - name: count_light_off
            state: "{{states.light | selectattr ('state', 'equalto', 'off') | list | length}}"
            icon: mdi:lightbulb

          - name: count_light_unavailable
            state: "{{states.light | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon: mdi:lightbulb-question
            
################# Реле #################

          - name: count_switch
            state: >
                  {%- set domains = ['switch'] -%}
                  {%- for domain in domains -%}
                    {%- for item in states[domain] -%}
                      {% if loop.first %}
                        {{loop.length}}
                      {% endif %}
                    {%- endfor -%}
                  {%- endfor -%}
            icon: mdi:power
            
          - name: count_switch_on
            state: "{{states.switch | selectattr ('state', 'equalto', 'on') | list | length}}"
            icon: mdi:power-plug

          - name: count_switch_off
            state: "{{states.switch | selectattr ('state', 'equalto', 'off') | list | length}}"
            icon: mdi:power-plug-off

          - name: count_switch_unavailable
            state: "{{states.switch | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon: mdi:power-plug-outline
            
################# Термоголовки #################

          - name: count_climate
            state: >
                  {%- set domains = ['climate'] -%}
                  {%- for domain in domains -%}
                    {%- for item in states[domain] -%}
                      {% if loop.first %}
                        {{loop.length}}
                      {% endif %}
                    {%- endfor -%}
                  {%- endfor -%}
            icon: mdi:thermostat
            
          - name: count_climate_heat
            state: "{{states.climate | selectattr ('state', 'equalto', 'heat') | list | length}}"
            icon: mdi:thermometer-plus

          - name: count_climate_off
            state: "{{states.climate | selectattr ('state', 'equalto', 'off') | list | length}}"
            icon: mdi:thermometer-minus

          - name: count_climate_unavailable
            state: "{{states.climate | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon: mdi:thermometer-alert
            
################# Сенсоры #################

          - name: count_sensor
            state: >
                  {%- set domains = ['sensor'] -%}
                  {%- for domain in domains -%}
                    {%- for item in states[domain] -%}
                      {% if loop.first %}
                        {{loop.length}}
                      {% endif %}
                    {%- endfor -%}
                  {%- endfor -%}
            icon: mdi:eye
            
          - name: count_sensor_unavailable
            state: "{{states.sensor | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon: mdi:eye-off
            
################# Бинарные сенсоры #################

          - name: count_binary_sensor
            state: >
                  {%- set domains = ['binary_sensor'] -%}
                  {%- for domain in domains -%}
                    {%- for item in states[domain] -%}
                      {% if loop.first %}
                        {{loop.length}}
                      {% endif %}
                    {%- endfor -%}
                  {%- endfor -%}
            icon: mdi:numeric-10-circle
            
          - name: count_binary_sensor_unavailable
            state: "{{states.binary_sensor | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon: mdi:alert-circle

################# Камеры #################

          - name: count_camera
            state: >
                  {%- set domains = ['camera'] -%}
                  {%- for domain in domains -%}
                    {%- for item in states[domain] -%}
                      {% if loop.first %}
                        {{loop.length}}
                      {% endif %}
                    {%- endfor -%}
                  {%- endfor -%}
            icon: mdi:cctv
            
          - name: count_camera_unavailable
            state: "{{states.camera | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon: mdi:alert-circle
            
            
#####################################################


          - name: currently_playing
            state: "{{states.media_player | selectattr ('state', 'equalto', 'playing') | list | length }} Playing"
            icon: mdi:test-tube






################# Дополнения #################            
    light:
      - platform: template
        lights:
          nullen:
            friendly_name: "Фейковый"
            icon_template: phu:ceiling-devere
            turn_on:
            turn_off:



    group:
      light_all:
        name: All Lights
        entities:
          - switch.0x54ef441000b89402_left
          - switch.0x54ef441000b89402_right
          - switch.0xa4c1388af6a76f04_l4
          - switch.0x54ef441000aad4d8_left
          - switch.0xa4c13849ef842ae5
          - switch.kn_backlight_lamps
          - switch.kn_backlight_lenta
          - switch.0xa4c138323f769290
          - switch.sonoff_10018da14e_1
          - switch.0x54ef441000aad4d8_right
          - switch.0xa4c1381662c81b0e
          - switch.0x54ef4410009f9505
          - switch.0xa4c1386f409b4ac4
          - light.lamp_1s

      motion_sensors:
        name: Motion sensors
        entities:
          - binary_sensor.bt_ld2410_presence
          - binary_sensor.0x00158d0008d90dbd_occupancy
          - binary_sensor.0x00158d0008f1142d_occupancy

      contact_sensors:
        name: Contact sensors
        entities:
          - binary_sensor.0x00158d0008d93f0d_contact
          - binary_sensor.0x00158d0008e1c64f_contact
          - binary_sensor.0xa4c1388bf2574d1e_contact
          - binary_sensor.0xa4c138dc68586d06_contact